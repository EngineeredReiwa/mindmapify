#!/usr/bin/env node

/**
 * Debug Test Script - „Éñ„É©„Ç¶„Ç∂„ÇíË°®Á§∫„Åó„Å¶„Éá„Éê„ÉÉ„Ç∞
 */

import puppeteer from 'puppeteer';

async function debugTest() {
  console.log('üîç Debug Test Starting („Éñ„É©„Ç¶„Ç∂Ë°®Á§∫„É¢„Éº„Éâ)...\n');
  
  const browser = await puppeteer.launch({ 
    headless: "new", // „Éê„ÉÉ„ÇØ„Ç∞„É©„Ç¶„É≥„ÉâÂÆüË°åÔºà„Éñ„É©„Ç¶„Ç∂ÈùûË°®Á§∫Ôºâ
    devtools: true,   // ÈñãÁô∫ËÄÖ„ÉÑ„Éº„É´„ÇíÈñã„Åè
    defaultViewport: { width: 1280, height: 720 }
  });
  
  const page = await browser.newPage();
  
  try {
    console.log('üåê Loading http://localhost:5173...');
    await page.goto('http://localhost:5173', { waitUntil: 'domcontentloaded' });
    
    const title = await page.title();
    console.log(`‚úÖ Page: ${title}`);
    
    // „Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„ÉàÊíÆÂΩ±
    await page.screenshot({ path: 'debug-screenshot.png' });
    console.log('üì∏ Screenshot saved: debug-screenshot.png');
    
    // New Node„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
    const newNodeBtn = await page.$('.toolbar-btn.primary');
    if (newNodeBtn) {
      console.log('üñ±Ô∏è Clicking New Node button...');
      await newNodeBtn.click();
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // „Éé„Éº„Éâ‰ΩúÊàêÂæå„ÅÆ„Çπ„ÇØ„É™„Éº„É≥„Ç∑„Éß„ÉÉ„Éà
      await page.screenshot({ path: 'debug-with-node.png' });
      console.log('üì∏ Screenshot with node saved: debug-with-node.png');
    }
    
    console.log('\nüîç „Éñ„É©„Ç¶„Ç∂„ÅØÊâãÂãï„ÅßÈñâ„Åò„Å¶„Åè„Å†„Åï„ÅÑÔºà10ÂàÜÂæå„Å´Ëá™ÂãïÁµÇ‰∫ÜÔºâ');
    
    // 10ÂàÜÂæå„Å´Ëá™ÂãïÁµÇ‰∫Ü
    setTimeout(async () => {
      await browser.close();
      console.log('‚è∞ „Çø„Ç§„É†„Ç¢„Ç¶„Éà„ÅßÁµÇ‰∫Ü');
    }, 600000);
    
  } catch (error) {
    console.error('‚ùå Debug test failed:', error.message);
    await browser.close();
  }
}

export { debugTest };

if (import.meta.url === `file://${process.argv[1]}`) {
  debugTest().catch(console.error);
}